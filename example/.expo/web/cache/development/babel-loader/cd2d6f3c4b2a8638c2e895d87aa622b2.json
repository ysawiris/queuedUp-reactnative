{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createHandler;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf5 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _State = _interopRequireDefault(require(\"./State\"));\n\nvar _class,\n    _temp,\n    _jsxFileName = \"/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/node_modules/react-native-gesture-handler/createHandler.web.js\";\n\nfunction handleHandlerStateChange(props, event, oldState, state) {\n  var enabled = props.enabled,\n      onHandlerStateChange = props.onHandlerStateChange;\n\n  if (enabled !== false && onHandlerStateChange) {\n    var _event$nativeEvent = event.nativeEvent,\n        x = _event$nativeEvent.locationX,\n        y = _event$nativeEvent.locationY,\n        absoluteX = _event$nativeEvent.pageX,\n        absoluteY = _event$nativeEvent.pageY;\n    onHandlerStateChange({\n      nativeEvent: {\n        oldState: oldState,\n        state: state,\n        x: x,\n        y: y,\n        absoluteX: absoluteX,\n        absoluteY: absoluteY,\n        pointerInside: true\n      }\n    });\n  }\n}\n\nfunction handleFailed(props, event) {\n  handleHandlerStateChange(props, event, _State.default.ACTIVE, _State.default.FAILED);\n}\n\nfunction handleEnd(props, event) {\n  handleHandlerStateChange(props, event, _State.default.ACTIVE, _State.default.END);\n}\n\nfunction handleActivate(props, event) {\n  handleHandlerStateChange(props, event, _State.default.BEGAN, _State.default.ACTIVE);\n}\n\nfunction handleBegan(props, event) {\n  handleHandlerStateChange(props, event, _State.default.UNDETERMINED, _State.default.BEGAN);\n}\n\nvar UnimplementedGestureHandler = function (_React$Component) {\n  (0, _inherits2.default)(UnimplementedGestureHandler, _React$Component);\n\n  function UnimplementedGestureHandler() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, UnimplementedGestureHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf5.default)(UnimplementedGestureHandler)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setNativeProps = function () {};\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(UnimplementedGestureHandler, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return UnimplementedGestureHandler;\n}(_react.default.Component);\n\nvar handlers = {\n  NativeViewGestureHandler: function (_React$Component2) {\n    (0, _inherits2.default)(NativeViewGestureHandler, _React$Component2);\n\n    function NativeViewGestureHandler() {\n      (0, _classCallCheck2.default)(this, NativeViewGestureHandler);\n      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf5.default)(NativeViewGestureHandler).apply(this, arguments));\n    }\n\n    (0, _createClass2.default)(NativeViewGestureHandler, [{\n      key: \"render\",\n      value: function render() {\n        var children = this.props.children;\n        return children;\n      }\n    }]);\n    return NativeViewGestureHandler;\n  }(_react.default.Component),\n  TapGestureHandler: (_temp = _class = function (_React$Component3) {\n    (0, _inherits2.default)(TapGestureHandler, _React$Component3);\n\n    function TapGestureHandler() {\n      var _getPrototypeOf3;\n\n      var _this2;\n\n      (0, _classCallCheck2.default)(this, TapGestureHandler);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf3 = (0, _getPrototypeOf5.default)(TapGestureHandler)).call.apply(_getPrototypeOf3, [this].concat(args)));\n      _this2.hasBegun = false;\n      _this2.touchBank = [];\n      _this2.timeout = null;\n\n      _this2.clearState = function () {\n        _this2.hasBegun = false;\n        _this2.touchBank = [];\n        window.clearTimeout(_this2.timeout);\n      };\n\n      _this2.handlePressIn = function (event) {\n        var maxDelayMs = _this2.props.maxDelayMs;\n\n        if (!_this2.hasBegun) {\n          event.persist();\n          _this2.hasBegun = true;\n          handleBegan(_this2.props, event);\n          _this2.timeout = window.setTimeout(function () {\n            if (_this2.hasBegun) {\n              _this2.clearState();\n\n              handleFailed(_this2.props, event);\n            }\n          }, maxDelayMs);\n        }\n      };\n\n      _this2.handlePressOut = function (event) {\n        var _event$touchHistory$t = event.touchHistory.touchBank,\n            touchBank = _event$touchHistory$t === void 0 ? [] : _event$touchHistory$t;\n        var _this2$props = _this2.props,\n            maxDeltaX = _this2$props.maxDeltaX,\n            maxDeltaY = _this2$props.maxDeltaY,\n            maxDurationMs = _this2$props.maxDurationMs,\n            numberOfTaps = _this2$props.numberOfTaps;\n        _this2.touchBank = _this2.touchBank.concat(touchBank);\n\n        var areTouchesValid = _this2.touchBank.every(function (touch) {\n          var currentPageX = touch.currentPageX,\n              currentPageY = touch.currentPageY,\n              currentTimeStamp = touch.currentTimeStamp,\n              startPageX = touch.startPageX,\n              startPageY = touch.startPageY,\n              startTimeStamp = touch.startTimeStamp;\n\n          if (startTimeStamp + maxDurationMs < currentTimeStamp) {\n            return false;\n          }\n\n          if (startPageX + maxDeltaX < currentPageX || startPageX - maxDeltaX > currentPageX) {\n            return false;\n          }\n\n          if (startPageY + maxDeltaY < currentPageY || startPageY - maxDeltaY > currentPageY) {\n            return false;\n          }\n\n          return true;\n        });\n\n        if (!areTouchesValid) {\n          _this2.clearState();\n\n          handleFailed(_this2.props, event);\n        } else if (_this2.touchBank.length >= numberOfTaps) {\n          handleActivate(_this2.props, event);\n\n          _this2.clearState();\n\n          handleEnd(_this2.props, event);\n        }\n      };\n\n      return _this2;\n    }\n\n    (0, _createClass2.default)(TapGestureHandler, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps() {}\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            children = _this$props.children,\n            style = _this$props.style;\n        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n          style: style,\n          onPressIn: this.handlePressIn,\n          onPressOut: this.handlePressOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          }\n        }, children);\n      }\n    }]);\n    return TapGestureHandler;\n  }(_react.default.Component), _class.defaultProps = {\n    numberOfTaps: 1,\n    maxDurationMs: 500,\n    maxDelayMs: 500,\n    minPointers: 1,\n    maxDeltaX: Number.MAX_SAFE_INTEGER,\n    maxDeltaY: Number.MAX_SAFE_INTEGER,\n    maxDist: Number.MAX_SAFE_INTEGER\n  }, _temp)\n};\n\nfunction createHandler(handlerName) {\n  var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var Handler = function (_React$Component4) {\n    (0, _inherits2.default)(Handler, _React$Component4);\n\n    function Handler() {\n      var _getPrototypeOf4;\n\n      var _this3;\n\n      (0, _classCallCheck2.default)(this, Handler);\n\n      for (var _len3 = arguments.length, _args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        _args[_key3] = arguments[_key3];\n      }\n\n      _this3 = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf4 = (0, _getPrototypeOf5.default)(Handler)).call.apply(_getPrototypeOf4, [this].concat(_args)));\n\n      _this3._refHandler = function (node) {\n        _this3._viewNode = node;\n      };\n\n      _this3.setNativeProps = function () {\n        var _this3$_viewNode;\n\n        (_this3$_viewNode = _this3._viewNode).setNativeProps.apply(_this3$_viewNode, arguments);\n      };\n\n      return _this3;\n    }\n\n    (0, _createClass2.default)(Handler, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (!handlers[handlerName]) {\n          console.warn(handlerName + \" is not yet supported on web.\");\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var Handler = handlers[handlerName] || UnimplementedGestureHandler;\n        return _react.default.createElement(Handler, (0, _extends2.default)({\n          ref: this._refHandler\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          }\n        }));\n      }\n    }]);\n    return Handler;\n  }(_react.default.Component);\n\n  Handler.displayName = handlerName;\n  Handler.propTypes = propTypes;\n  return Handler;\n}","map":{"version":3,"sources":["/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/node_modules/react-native-gesture-handler/createHandler.web.js"],"names":["handleHandlerStateChange","props","event","oldState","state","enabled","onHandlerStateChange","nativeEvent","x","locationX","y","locationY","absoluteX","pageX","absoluteY","pageY","pointerInside","handleFailed","State","ACTIVE","FAILED","handleEnd","END","handleActivate","BEGAN","handleBegan","UNDETERMINED","UnimplementedGestureHandler","setNativeProps","children","React","Component","handlers","NativeViewGestureHandler","TapGestureHandler","hasBegun","touchBank","timeout","clearState","window","clearTimeout","handlePressIn","maxDelayMs","persist","setTimeout","handlePressOut","touchHistory","maxDeltaX","maxDeltaY","maxDurationMs","numberOfTaps","concat","areTouchesValid","every","touch","currentPageX","currentPageY","currentTimeStamp","startPageX","startPageY","startTimeStamp","length","style","defaultProps","minPointers","Number","MAX_SAFE_INTEGER","maxDist","createHandler","handlerName","propTypes","Handler","_refHandler","node","_viewNode","console","warn","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\n\nimport State from './State';\n\nfunction handleHandlerStateChange(props, event, oldState, state) {\n  const { enabled, onHandlerStateChange } = props;\n\n  if (enabled !== false && onHandlerStateChange) {\n    const {\n      nativeEvent: {\n        locationX: x,\n        locationY: y,\n        pageX: absoluteX,\n        pageY: absoluteY,\n      },\n    } = event;\n\n    onHandlerStateChange({\n      nativeEvent: {\n        oldState,\n        state,\n        x,\n        y,\n        absoluteX,\n        absoluteY,\n        pointerInside: true,\n      },\n    });\n  }\n}\n\nfunction handleFailed(props, event) {\n  handleHandlerStateChange(props, event, State.ACTIVE, State.FAILED);\n}\n\nfunction handleEnd(props, event) {\n  handleHandlerStateChange(props, event, State.ACTIVE, State.END);\n}\n\nfunction handleActivate(props, event) {\n  handleHandlerStateChange(props, event, State.BEGAN, State.ACTIVE);\n}\n\nfunction handleBegan(props, event) {\n  handleHandlerStateChange(props, event, State.UNDETERMINED, State.BEGAN);\n}\n\nclass UnimplementedGestureHandler extends React.Component {\n  setNativeProps = () => {\n    // Do nothing\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\n\nconst handlers = {\n  NativeViewGestureHandler: class NativeViewGestureHandler extends React.Component {\n    render() {\n      const { children } = this.props;\n\n      return children;\n    }\n  },\n\n  TapGestureHandler: class TapGestureHandler extends React.Component {\n    static defaultProps = {\n      numberOfTaps: 1,\n      maxDurationMs: 500,\n      maxDelayMs: 500,\n      minPointers: 1,\n      maxDeltaX: Number.MAX_SAFE_INTEGER,\n      maxDeltaY: Number.MAX_SAFE_INTEGER,\n      maxDist: Number.MAX_SAFE_INTEGER,\n    };\n\n    hasBegun = false;\n    touchBank = [];\n    timeout = null;\n\n    setNativeProps() {}\n\n    clearState = () => {\n      this.hasBegun = false;\n      this.touchBank = [];\n      window.clearTimeout(this.timeout);\n    };\n\n    handlePressIn = event => {\n      const { maxDelayMs } = this.props;\n\n      if (!this.hasBegun) {\n        event.persist();\n        this.hasBegun = true;\n        handleBegan(this.props, event);\n\n        // Cancel if not finished in time\n        this.timeout = window.setTimeout(() => {\n          if (this.hasBegun) {\n            this.clearState();\n            handleFailed(this.props, event);\n          }\n        }, maxDelayMs);\n      }\n    };\n\n    handlePressOut = event => {\n      const {\n        touchHistory: { touchBank = [] },\n      } = event;\n      const { maxDeltaX, maxDeltaY, maxDurationMs, numberOfTaps } = this.props;\n\n      this.touchBank = this.touchBank.concat(touchBank);\n\n      // Check if all touches are valid\n      const areTouchesValid = this.touchBank.every(touch => {\n        const {\n          currentPageX,\n          currentPageY,\n          currentTimeStamp,\n          startPageX,\n          startPageY,\n          startTimeStamp,\n        } = touch;\n\n        // Check if touch took longer than it may\n        if (startTimeStamp + maxDurationMs < currentTimeStamp) {\n          return false;\n        }\n\n        // Check if touch moved too far away\n        if (\n          startPageX + maxDeltaX < currentPageX ||\n          startPageX - maxDeltaX > currentPageX\n        ) {\n          return false;\n        }\n\n        // Check if touch moved too far away\n        if (\n          startPageY + maxDeltaY < currentPageY ||\n          startPageY - maxDeltaY > currentPageY\n        ) {\n          return false;\n        }\n\n        return true;\n      });\n\n      // Check if all touches were valid and the necessary number of touches was achieved\n      if (!areTouchesValid) {\n        this.clearState();\n        handleFailed(this.props, event);\n      } else if (this.touchBank.length >= numberOfTaps) {\n        handleActivate(this.props, event);\n        this.clearState();\n        handleEnd(this.props, event);\n      }\n    };\n\n    render() {\n      const { children, style } = this.props;\n\n      return (\n        <TouchableWithoutFeedback\n          style={style}\n          onPressIn={this.handlePressIn}\n          onPressOut={this.handlePressOut}>\n          {children}\n        </TouchableWithoutFeedback>\n      );\n    }\n  },\n};\n\nexport default function createHandler(handlerName, propTypes = {}) {\n  class Handler extends React.Component {\n    static displayName = handlerName;\n\n    static propTypes = propTypes;\n\n    componentDidMount() {\n      if (!handlers[handlerName]) {\n        console.warn(`${handlerName} is not yet supported on web.`);\n      }\n    }\n\n    _refHandler = node => {\n      this._viewNode = node;\n    };\n\n    setNativeProps = (...args) => {\n      this._viewNode.setNativeProps(...args);\n    };\n\n    render() {\n      const Handler = handlers[handlerName] || UnimplementedGestureHandler;\n\n      return <Handler ref={this._refHandler} {...this.props} />;\n    }\n  }\n  return Handler;\n}\n"]},"metadata":{},"sourceType":"script"}