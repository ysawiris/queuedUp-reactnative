{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/node_modules/react-native-tab-view/src/TouchableItem.js\";\nvar LOLLIPOP = 21;\n\nvar TouchableItem = function (_React$Component) {\n  (0, _inherits2.default)(TouchableItem, _React$Component);\n\n  function TouchableItem() {\n    (0, _classCallCheck2.default)(this, TouchableItem);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableItem).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(TouchableItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          pressOpacity = _this$props.pressOpacity,\n          pressColor = _this$props.pressColor,\n          borderless = _this$props.borderless,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"style\", \"pressOpacity\", \"pressColor\", \"borderless\"]);\n\n      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= LOLLIPOP) {\n        return React.createElement(_reactNative.TouchableNativeFeedback, (0, _extends2.default)({}, rest, {\n          background: _reactNative.TouchableNativeFeedback.Ripple(pressColor, borderless),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          }\n        }), React.createElement(_reactNative.View, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          }\n        }, React.Children.only(this.props.children)));\n      } else {\n        return React.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, rest, {\n          rejectResponderTermination: true,\n          style: style,\n          activeOpacity: pressOpacity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          }\n        }), this.props.children);\n      }\n    }\n  }]);\n  return TouchableItem;\n}(React.Component);\n\nexports.default = TouchableItem;\nTouchableItem.propTypes = {\n  onPress: _propTypes.default.func.isRequired,\n  delayPressIn: _propTypes.default.number,\n  borderless: _propTypes.default.bool,\n  pressColor: _propTypes.default.string,\n  pressOpacity: _propTypes.default.number,\n  children: _propTypes.default.node.isRequired\n};\nTouchableItem.defaultProps = {\n  pressColor: 'rgba(255, 255, 255, .4)'\n};","map":{"version":3,"sources":["/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/node_modules/react-native-tab-view/src/TouchableItem.js"],"names":["LOLLIPOP","TouchableItem","props","style","pressOpacity","pressColor","borderless","rest","Platform","OS","Version","TouchableNativeFeedback","Ripple","React","Children","only","children","Component","propTypes","onPress","PropTypes","func","isRequired","delayPressIn","number","bool","string","node","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;;AAQA,IAAMA,QAAQ,GAAG,EAAjB;;IAYqBC,a;;;;;;;;;;6BAcV;AAAA,wBAC0D,KAAKC,KAD/D;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,YADR,eACQA,YADR;AAAA,UACsBC,UADtB,eACsBA,UADtB;AAAA,UACkCC,UADlC,eACkCA,UADlC;AAAA,UACiDC,IADjD;;AAGP,UAAIC,sBAASC,EAAT,KAAgB,SAAhB,IAA6BD,sBAASE,OAAT,IAAoBV,QAArD,EAA+D;AAC7D,eACE,oBAAC,oCAAD,6BACMO,IADN;AAEE,UAAA,UAAU,EAAEI,qCAAwBC,MAAxB,CAA+BP,UAA/B,EAA2CC,UAA3C,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YAIE,oBAAC,iBAAD;AAAM,UAAA,KAAK,EAAEH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBU,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoB,KAAKb,KAAL,CAAWc,QAA/B,CAArB,CAJF,CADF;AAQD,OATD,MASO;AACL,eACE,oBAAC,6BAAD,6BACMT,IADN;AAEE,UAAA,0BAA0B,MAF5B;AAGE,UAAA,KAAK,EAAEJ,KAHT;AAIE,UAAA,aAAa,EAAEC,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAMG,KAAKF,KAAL,CAAWc,QANd,CADF;AAUD;AACF;;;EAtCwCH,KAAK,CAACI,S;;;AAA5BhB,a,CACZiB,S,GAAY;AACjBC,EAAAA,OAAO,EAAEC,mBAAUC,IAAV,CAAeC,UADP;AAEjBC,EAAAA,YAAY,EAAEH,mBAAUI,MAFP;AAGjBlB,EAAAA,UAAU,EAAEc,mBAAUK,IAHL;AAIjBpB,EAAAA,UAAU,EAAEe,mBAAUM,MAJL;AAKjBtB,EAAAA,YAAY,EAAEgB,mBAAUI,MALP;AAMjBR,EAAAA,QAAQ,EAAEI,mBAAUO,IAAV,CAAeL;AANR,C;AADArB,a,CAUZ2B,Y,GAAe;AACpBvB,EAAAA,UAAU,EAAE;AADQ,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  View,\n} from 'react-native';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\nconst LOLLIPOP = 21;\n\ntype Props = {\n  onPress: () => mixed,\n  delayPressIn?: number,\n  borderless?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  children?: React.Node,\n  style?: ViewStyleProp,\n};\n\nexport default class TouchableItem extends React.Component<Props> {\n  static propTypes = {\n    onPress: PropTypes.func.isRequired,\n    delayPressIn: PropTypes.number,\n    borderless: PropTypes.bool,\n    pressColor: PropTypes.string,\n    pressOpacity: PropTypes.number,\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    pressColor: 'rgba(255, 255, 255, .4)',\n  };\n\n  render() {\n    const { style, pressOpacity, pressColor, borderless, ...rest } = this.props;\n\n    if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    } else {\n      return (\n        <TouchableOpacity\n          {...rest}\n          rejectResponderTermination\n          style={style}\n          activeOpacity={pressOpacity}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}