{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _rnSpotifySdk = _interopRequireDefault(require(\"rn-spotify-sdk\"));\n\nvar _SearchBar = _interopRequireDefault(require(\"./SearchBar\"));\n\nvar _MaterialCommunityIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialCommunityIcons\"));\n\nvar _jsxFileName = \"/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/PlayerScreen.js\";\n\nvar PlayerScreen = function (_PureComponent) {\n  (0, _inherits2.default)(PlayerScreen, _PureComponent);\n\n  function PlayerScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PlayerScreen);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlayerScreen).call(this, props));\n    _this.state = {\n      spotifyUserName: null,\n      query: \"\",\n      offset: 0,\n      isEmpty: false,\n      songs: []\n    };\n    _this.spotifyLogoutButtonWasPressed = _this.spotifyLogoutButtonWasPressed.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(PlayerScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      _rnSpotifySdk.default.getMe().then(function (result) {\n        _this2.setState({\n          spotifyUserName: result.display_name\n        });\n      }).then(function () {}).catch(function (error) {\n        _reactNative.Alert.alert(\"Error\", error.message);\n      });\n    }\n  }, {\n    key: \"goToInitialScreen\",\n    value: function goToInitialScreen() {\n      this.props.navigation.navigate('initial');\n    }\n  }, {\n    key: \"spotifyLogoutButtonWasPressed\",\n    value: function spotifyLogoutButtonWasPressed() {\n      var _this3 = this;\n\n      _rnSpotifySdk.default.logout().finally(function () {\n        _this3.goToInitialScreen();\n      });\n    }\n  }, {\n    key: \"handleSearchChange\",\n    value: function handleSearchChange(text) {\n      var _this4 = this;\n\n      this.setState({\n        isEmpty: false,\n        query: text,\n        offset: 0,\n        songs: [],\n        types: ['tracks', 'albums', 'artists', 'playlists']\n      }, function () {\n        _this4.loadNextPage();\n      });\n    }\n  }, {\n    key: \"loadNextPage\",\n    value: function loadNextPage() {\n      var _this5 = this;\n\n      var _this$state, songs, offset, query, types, newSongs;\n\n      return _regenerator.default.async(function loadNextPage$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = this.state, songs = _this$state.songs, offset = _this$state.offset, query = _this$state.query, types = _this$state.types;\n              newSongs = _rnSpotifySdk.default.search(query, types).then(function (result) {\n                _this5.setState({\n                  songs: result.items.name\n                });\n              });\n              this.setState({\n                isFetching: false,\n                songs: [].concat((0, _toConsumableArray2.default)(songs), (0, _toConsumableArray2.default)(newSongs)),\n                offset: offset + 10\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var query = this.state.query;\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, this.state.spotifyUserName != null ? _react.default.createElement(_reactNative.Text, {\n        style: styles.greeting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }, \"You are logged in as \", this.state.spotifyUserName) : _react.default.createElement(_reactNative.Text, {\n        style: styles.greeting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, \"Getting user info...\"), _react.default.createElement(_reactNative.TouchableHighlight, {\n        onPress: this.spotifyLogoutButtonWasPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      }, \"Logout\")), _react.default.createElement(_SearchBar.default, {\n        onChange: function onChange(text) {\n          return _this6.handleSearchChange(text);\n        },\n        text: query,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: styles.greeting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }, \"List of Songs: \", this.state.songs));\n    }\n  }]);\n  return PlayerScreen;\n}(_react.PureComponent);\n\nexports.default = PlayerScreen;\nPlayerScreen.navigationOptions = {\n  title: 'Player'\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  greeting: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10\n  }\n});","map":{"version":3,"sources":["/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/PlayerScreen.js"],"names":["PlayerScreen","props","state","spotifyUserName","query","offset","isEmpty","songs","spotifyLogoutButtonWasPressed","bind","Spotify","getMe","then","result","setState","display_name","catch","error","Alert","alert","message","navigation","navigate","logout","finally","goToInitialScreen","text","types","loadNextPage","newSongs","search","items","name","isFetching","styles","container","greeting","handleSearchChange","PureComponent","navigationOptions","title","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","textAlign","margin"],"mappings":"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","sourcesContent":["\nimport React, { PureComponent } from 'react';\nimport {\n\tAlert,\n\tStyleSheet,\n\tText,\n\tTouchableHighlight,\n\tView\n} from 'react-native';\nimport Spotify from 'rn-spotify-sdk';\nimport SearchBar from './SearchBar';\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\"\n\n\nexport default class PlayerScreen extends PureComponent {\n\tstatic navigationOptions = {\n\t\ttitle: 'Player',\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tspotifyUserName: null,\n\t\t\tquery: \"\",\n\t\t\toffset: 0,\n\t\t\tisEmpty: false,\n\t\t\tsongs: []\n\n\t\t};\n\n\t\tthis.spotifyLogoutButtonWasPressed = this.spotifyLogoutButtonWasPressed.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\t// send api request to get user info\n\t\tSpotify.getMe().then((result) => {\n\t\t\t// update state with user info\n\t\t\tthis.setState({ spotifyUserName: result.display_name });\n\t\t\t// play song\n\t\t\t// return Spotify.playURI(\"spotify:track:0W9E3s2G4szLUwXsE17x5E\", 0, 0);\n\t\t}).then(() => {\n\t\t\t// success\n\t\t}).catch((error) => {\n\t\t\t// error\n\t\t\tAlert.alert(\"Error\", error.message);\n\t\t});\n\n\n\t}\n\n\tgoToInitialScreen() {\n\t\tthis.props.navigation.navigate('initial');\n\t}\n\n\tspotifyLogoutButtonWasPressed() {\n\t\tSpotify.logout().finally(() => {\n\t\t\tthis.goToInitialScreen();\n\t\t});\n\t}\n\n\thandleSearchChange(text) {\n        this.setState(\n            {\n                isEmpty: false,\n                query: text,\n                offset: 0,\n\t\t\t\tsongs: [],\n\t\t\t\ttypes: ['tracks', 'albums', 'artists', 'playlists']\n            },\n            () => {\n                this.loadNextPage();\n            }\n        );\n    }\n\n\n\tasync loadNextPage() {\n        const {\n            songs,\n            offset,\n            query,\n\t\t\ttypes,\n        } = this.state;\n\n        // const newSongs = await spotify_search({\n        //     offset: offset,\n        //     limit: PAGE,\n        //     q: query,\n        //     spotify_token\n\t\t// });\n\t\tconst newSongs = Spotify.search(query, types).then((result) => {\n\t\t\tthis.setState({ songs: result.items.name})\n\n\t\t})\n\n\t\tthis.setState({\n            isFetching: false,\n            songs: [...songs, ...newSongs],\n            offset: offset + 10\n        });\n    }\n\n\n\trender() {\n\t\tconst { query } = this.state;\n\t\treturn (\n\t\t\t<View style={styles.container}>\n\t\t\t\t{ this.state.spotifyUserName!=null ? (\n\t\t\t\t\t<Text style={styles.greeting}>\n\t\t\t\t\t\tYou are logged in as {this.state.spotifyUserName}\n\t\t\t\t\t</Text>\n\t\t\t\t) : (\n\t\t\t\t\t<Text style={styles.greeting}>\n\t\t\t\t\t\tGetting user info...\n\t\t\t\t\t</Text>\n\t\t\t\t)}\n\t\t\t\t<TouchableHighlight onPress={this.spotifyLogoutButtonWasPressed}>\n\t\t\t\t\t<Text>Logout</Text>\n\t\t\t\t</TouchableHighlight>\n\t\t\t\t<SearchBar\n\t\t\t\t\tonChange={text => this.handleSearchChange(text)}\n\t\t\t\t\ttext={query}\n\t\t\t\t/>\n\t\t\t\t<Text style={styles.greeting}>\n\t\t\t\t\tList of Songs: {this.state.songs}\n\t\t\t\t</Text>\n\n\t\t\t</View>\n\t\t);\n\t}\n}\n\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tbackgroundColor: '#F5FCFF',\n\t},\n\tgreeting: {\n\t\tfontSize: 20,\n\t\ttextAlign: 'center',\n\t\tmargin: 10,\n\t},\n});\n"]},"metadata":{},"sourceType":"script"}