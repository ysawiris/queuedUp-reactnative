{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/node_modules/react-navigation-drawer/dist/views/TouchableItem.js\";\nvar ANDROID_VERSION_LOLLIPOP = 21;\n\nvar TouchableItem = function (_React$Component) {\n  (0, _inherits2.default)(TouchableItem, _React$Component);\n\n  function TouchableItem() {\n    (0, _classCallCheck2.default)(this, TouchableItem);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableItem).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(TouchableItem, [{\n    key: \"render\",\n    value: function render() {\n      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n        var _this$props = this.props,\n            style = _this$props.style,\n            rest = (0, _objectWithoutProperties2.default)(_this$props, [\"style\"]);\n        return _react.default.createElement(_reactNative.TouchableNativeFeedback, (0, _extends2.default)({}, rest, {\n          style: null,\n          background: _reactNative.TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          }\n        }), _react.default.createElement(_reactNative.View, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          }\n        }, _react.default.Children.only(this.props.children)));\n      }\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }), this.props.children);\n    }\n  }]);\n  return TouchableItem;\n}(_react.default.Component);\n\nexports.default = TouchableItem;\nTouchableItem.defaultProps = {\n  borderless: false,\n  pressColor: 'rgba(0, 0, 0, .32)'\n};","map":{"version":3,"sources":["/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/node_modules/react-navigation-drawer/dist/views/TouchableItem.js"],"names":["ANDROID_VERSION_LOLLIPOP","TouchableItem","Platform","OS","Version","props","style","rest","TouchableNativeFeedback","Ripple","pressColor","borderless","React","Children","only","children","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AASA;;AACA;;;AAEA,IAAMA,wBAAwB,GAAG,EAAjC;;IAEqBC,a;;;;;;;;;;6BAMV;AASP,UAAIC,sBAASC,EAAT,KAAgB,SAAhB,IAA6BD,sBAASE,OAAT,IAAoBJ,wBAArD,EAA+E;AAAA,0BAClD,KAAKK,KAD6C;AAAA,YACrEC,KADqE,eACrEA,KADqE;AAAA,YAC3DC,IAD2D;AAE7E,eAAO,6BAAC,oCAAD,6BAA6BA,IAA7B;AAAmC,UAAA,KAAK,EAAE,IAA1C;AAAgD,UAAA,UAAU,EAAEC,qCAAwBC,MAAxB,CAA+B,KAAKJ,KAAL,CAAWK,UAA1C,EAAsD,KAAKL,KAAL,CAAWM,UAAjE,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,YACH,6BAAC,iBAAD;AAAM,UAAA,KAAK,EAAEL,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBM,eAAMC,QAAN,CAAeC,IAAf,CAAoB,KAAKT,KAAL,CAAWU,QAA/B,CAArB,CADG,CAAP;AAGD;;AAED,aAAO,6BAAC,6BAAD,6BAAsB,KAAKV,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmC,KAAKA,KAAL,CAAWU,QAA9C,CAAP;AACD;;;EAvBwCH,eAAMI,S;;;AAA5Bf,a,CACZgB,Y,GAAe;AACpBN,EAAAA,UAAU,EAAE,KADQ;AAEpBD,EAAAA,UAAU,EAAE;AAFQ,C","sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport React from 'react';\nimport { Platform, TouchableNativeFeedback, TouchableOpacity, View } from 'react-native';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\nexport default class TouchableItem extends React.Component {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)'\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n      const { style, ...rest } = this.props;\n      return <TouchableNativeFeedback {...rest} style={null} background={TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless)}>\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>;\n    }\n\n    return <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>;\n  }\n}"]},"metadata":{},"sourceType":"script"}