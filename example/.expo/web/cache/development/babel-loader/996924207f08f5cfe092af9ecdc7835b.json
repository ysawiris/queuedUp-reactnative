{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _jsxFileName = \"/Users/brentvatne/coding/react-navigation-stack/src/views/BorderlessButton.tsx\";\n\nvar AnimatedBaseButton = _reactNative.Animated.createAnimatedComponent(_reactNativeGestureHandler.BaseButton);\n\nvar BorderlessButton = function (_React$Component) {\n  (0, _inherits2.default)(BorderlessButton, _React$Component);\n\n  function BorderlessButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BorderlessButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(BorderlessButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.opacity = new _reactNative.Animated.Value(1);\n\n    _this.handleActiveStateChange = function (active) {\n      if (_reactNative.Platform.OS !== 'android') {\n        _reactNative.Animated.spring(_this.opacity, {\n          stiffness: 1000,\n          damping: 500,\n          mass: 3,\n          overshootClamping: true,\n          restDisplacementThreshold: 0.01,\n          restSpeedThreshold: 0.01,\n          toValue: active ? _this.props.activeOpacity : 1,\n          useNativeDriver: true\n        }).start();\n      }\n\n      _this.props.onActiveStateChange && _this.props.onActiveStateChange(active);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(BorderlessButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          enabled = _this$props.enabled,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"children\", \"style\", \"enabled\"]);\n      return React.createElement(AnimatedBaseButton, (0, _extends2.default)({}, rest, {\n        onActiveStateChange: this.handleActiveStateChange,\n        style: [style, _reactNative.Platform.OS === 'ios' && enabled && {\n          opacity: this.opacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }), children);\n    }\n  }]);\n  return BorderlessButton;\n}(React.Component);\n\nexports.default = BorderlessButton;\nBorderlessButton.defaultProps = {\n  activeOpacity: 0.3,\n  borderless: true\n};","map":{"version":3,"sources":["BorderlessButton.tsx"],"names":["AnimatedBaseButton","Animated","BorderlessButton","React","Component","defaultProps","activeOpacity","borderless","opacity","handleActiveStateChange","Platform","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","toValue","active","useNativeDriver","children","style","enabled","rest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,kBAAkB,GAAGC,sBAAAA,uBAAAA,CAA3B,qCAA2BA,CAA3B;;AAMqBC,IAAAA,gB;;;;;;;;;;;;;;;UAMXM,O,GAAU,IAAIP,sBAAJ,KAAA,CAAA,CAAA,C;;UAEVQ,uB,GAA0B,UAAA,MAAA,EAAqB;AACrD,UAAIC,sBAAAA,EAAAA,KAAJ,SAAA,EAA+B;AAC7BT,8BAAAA,MAAAA,CAAgB,KAAA,CAAhBA,OAAAA,EAA8B;AAC5BU,UAAAA,SAAS,EADmB,IAAA;AAE5BC,UAAAA,OAAO,EAFqB,GAAA;AAG5BC,UAAAA,IAAI,EAHwB,CAAA;AAI5BC,UAAAA,iBAAiB,EAJW,IAAA;AAK5BC,UAAAA,yBAAyB,EALG,IAAA;AAM5BC,UAAAA,kBAAkB,EANU,IAAA;AAO5BC,UAAAA,OAAO,EAAEC,MAAM,GAAG,KAAA,CAAA,KAAA,CAAH,aAAA,GAPa,CAAA;AAQ5BC,UAAAA,eAAe,EARjBlB;AAA8B,SAA9BA,EAAAA,KAAAA;AAYF;;AAAA,MAAA,KAAA,CAAA,KAAA,CAAA,mBAAA,IAAkC,KAAA,CAAA,KAAA,CAAA,mBAAA,CAAlC,MAAkC,CAAlC;;;;;;;;6BAGO;AAAA,UAAA,WAAA,GACuC,KADvC,KAAA;AAAA,UACCmB,QADD,GAAA,WAAA,CAAA,QAAA;AAAA,UACWC,KADX,GAAA,WAAA,CAAA,KAAA;AAAA,UACkBC,OADlB,GAAA,WAAA,CAAA,OAAA;AAAA,UAC8BC,IAD9B,GAAA,uCAAA,WAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,SAAA,CAAA,CAAA;AAGP,aACE,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,uBAAA,EAAA,EAAA,IAAA,EAAA;AAEE,QAAA,mBAAmB,EAAE,KAFvB,uBAAA;AAGE,QAAA,KAAK,EAAE,CAAA,KAAA,EAELb,sBAAAA,EAAAA,KAAAA,KAAAA,IAAAA,OAAAA,IAAoC;AAAEF,UAAAA,OAAO,EAAE,KALnD;AAKwC,SAF/B,CAHT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EADF,QACE,CADF;;;;EA5B0CL,KAAK,CAACC,S,CAA/BF;;;AAAAA,gB,CACZG,YADYH,GACG;AACpBI,EAAAA,aAAa,EADO,GAAA;AAEpBC,EAAAA,UAAU,EAHOL;AACG,CADHA","sourcesContent":["import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { BaseButton } from 'react-native-gesture-handler';\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\ntype Props = React.ComponentProps<typeof BaseButton> & {\n  activeOpacity: number;\n};\n\nexport default class BorderlessButton extends React.Component<Props> {\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  private opacity = new Animated.Value(1);\n\n  private handleActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      Animated.spring(this.opacity, {\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        toValue: active ? this.props.activeOpacity : 1,\n        useNativeDriver: true,\n      }).start();\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, enabled, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this.handleActiveStateChange}\n        style={[\n          style,\n          Platform.OS === 'ios' && enabled && { opacity: this.opacity },\n        ]}\n      >\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}