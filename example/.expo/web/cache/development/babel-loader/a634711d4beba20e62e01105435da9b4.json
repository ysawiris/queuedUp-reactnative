{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _invariant = _interopRequireDefault(require(\"../utils/invariant\"));\n\nvar _jsxFileName = \"/Users/brentvatne/coding/react-navigation-core/src/navigators/createNavigator.js\";\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  var Navigator = function (_React$Component) {\n    (0, _inherits2.default)(Navigator, _React$Component);\n\n    function Navigator() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, Navigator);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Navigator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        descriptors: {},\n        screenProps: _this.props.screenProps\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(Navigator, [{\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(NavigatorView, (0, _extends2.default)({}, this.props, {\n          screenProps: this.state.screenProps,\n          navigation: this.props.navigation,\n          navigationConfig: navigationConfig,\n          descriptors: this.state.descriptors,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          }\n        }));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var prevDescriptors = prevState.descriptors;\n        var navigation = nextProps.navigation,\n            screenProps = nextProps.screenProps;\n        (0, _invariant.default)(navigation != null, 'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html');\n        var state = navigation.state;\n        var routes = state.routes;\n\n        if (typeof routes === 'undefined') {\n          throw new TypeError('No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop');\n        }\n\n        var descriptors = {};\n        routes.forEach(function (route) {\n          if (prevDescriptors && prevDescriptors[route.key] && route === prevDescriptors[route.key].state && screenProps === prevState.screenProps) {\n            descriptors[route.key] = prevDescriptors[route.key];\n            return;\n          }\n\n          var getComponent = router.getComponentForRouteName.bind(null, route.routeName);\n          var childNavigation = navigation.getChildNavigation(route.key);\n          var options = router.getScreenOptions(childNavigation, screenProps);\n          descriptors[route.key] = {\n            key: route.key,\n            getComponent: getComponent,\n            options: options,\n            state: route,\n            navigation: childNavigation\n          };\n        });\n        return {\n          descriptors: descriptors,\n          screenProps: screenProps\n        };\n      }\n    }]);\n    return Navigator;\n  }(_react.default.Component);\n\n  Navigator.router = router;\n  Navigator.navigationOptions = navigationConfig.navigationOptions;\n  return Navigator;\n}\n\nvar _default = createNavigator;\nexports.default = _default;","map":{"version":3,"sources":["createNavigator.js"],"names":["Navigator","React","navigationConfig","descriptors","screenProps","prevDescriptors","prevState","navigation","nextProps","invariant","state","routes","route","getComponent","router","childNavigation","options","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport invariant from '../utils/invariant';\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  class Navigator extends React.Component {\n    static router = router;\n    static navigationOptions = navigationConfig.navigationOptions;\n\n    state = {\n      descriptors: {},\n      screenProps: this.props.screenProps,\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      const prevDescriptors = prevState.descriptors;\n      const { navigation, screenProps } = nextProps;\n      invariant(\n        navigation != null,\n        'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html'\n      );\n      const { state } = navigation;\n      const { routes } = state;\n      if (typeof routes === 'undefined') {\n        throw new TypeError(\n          'No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop'\n        );\n      }\n\n      const descriptors = {};\n\n      routes.forEach(route => {\n        if (\n          prevDescriptors &&\n          prevDescriptors[route.key] &&\n          route === prevDescriptors[route.key].state &&\n          screenProps === prevState.screenProps\n        ) {\n          descriptors[route.key] = prevDescriptors[route.key];\n          return;\n        }\n        const getComponent = router.getComponentForRouteName.bind(\n          null,\n          route.routeName\n        );\n        const childNavigation = navigation.getChildNavigation(route.key);\n        const options = router.getScreenOptions(childNavigation, screenProps);\n        descriptors[route.key] = {\n          key: route.key,\n          getComponent,\n          options,\n          state: route,\n          navigation: childNavigation,\n        };\n      });\n\n      return { descriptors, screenProps };\n    }\n\n    render() {\n      return (\n        <NavigatorView\n          {...this.props}\n          screenProps={this.state.screenProps}\n          navigation={this.props.navigation}\n          navigationConfig={navigationConfig}\n          descriptors={this.state.descriptors}\n        />\n      );\n    }\n  }\n\n  return Navigator;\n}\n\nexport default createNavigator;\n"]},"metadata":{},"sourceType":"script"}