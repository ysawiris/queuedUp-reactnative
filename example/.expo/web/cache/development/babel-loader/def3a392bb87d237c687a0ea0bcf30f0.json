{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _core = require(\"@react-navigation/core\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _DrawerRouter = _interopRequireDefault(require(\"../routers/DrawerRouter\"));\n\nvar _DrawerView = _interopRequireDefault(require(\"../views/DrawerView\"));\n\nvar _DrawerNavigatorItems = _interopRequireDefault(require(\"../views/DrawerNavigatorItems\"));\n\nvar _jsxFileName = \"/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js\";\n\nvar defaultContentComponent = function defaultContentComponent(props) {\n  return _react.default.createElement(_reactNative.ScrollView, {\n    alwaysBounceVertical: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    }\n  }, _react.default.createElement(_native.SafeAreaView, {\n    forceInset: {\n      top: 'always',\n      horizontal: 'never'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    }\n  }, _react.default.createElement(_DrawerNavigatorItems.default, (0, _extends2.default)({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    }\n  }))));\n};\n\nvar DefaultDrawerConfig = {\n  drawerWidth: function drawerWidth() {\n    var _Dimensions$get = _reactNative.Dimensions.get('window'),\n        height = _Dimensions$get.height,\n        width = _Dimensions$get.width;\n\n    var smallerAxisSize = Math.min(height, width);\n    var isLandscape = width > height;\n    var isTablet = smallerAxisSize >= 600;\n    var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    var maxWidth = isTablet ? 320 : 280;\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: 'white',\n  useNativeAnimations: true,\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n  overlayColor: 'black'\n};\n\nvar DrawerNavigator = function DrawerNavigator(routeConfigs) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var mergedConfig = (0, _objectSpread2.default)({}, DefaultDrawerConfig, config);\n  var drawerRouter = (0, _DrawerRouter.default)(routeConfigs, mergedConfig);\n  var navigator = (0, _core.createNavigator)(_DrawerView.default, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nvar _default = DrawerNavigator;\nexports.default = _default;","map":{"version":3,"sources":["/Users/diyarkudrat/Term_5/spd1.5/react-native-spotify-master/example/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js"],"names":["defaultContentComponent","props","top","horizontal","DefaultDrawerConfig","drawerWidth","Dimensions","get","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","Platform","OS","maxWidth","contentComponent","drawerPosition","keyboardDismissMode","drawerBackgroundColor","useNativeAnimations","drawerType","hideStatusBar","statusBarAnimation","overlayColor","DrawerNavigator","routeConfigs","config","mergedConfig","drawerRouter","navigator","DrawerView"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAMA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK;AAAA,SAAI,6BAAC,uBAAD;AAAY,IAAA,oBAAoB,EAAE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,KACrC,6BAAC,oBAAD;AAAc,IAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,UAAU,EAAE;AAA7B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,6BAAD,6BAAiBF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADqC,CAAJ;AAAA,CAArC;;AAMA,IAAMG,mBAAmB,GAAG;AAC1BC,EAAAA,WAAW,EAAE,uBAAM;AAAA,0BAMSC,wBAAWC,GAAX,CAAe,QAAf,CANT;AAAA,QAMTC,MANS,mBAMTA,MANS;AAAA,QAMDC,KANC,mBAMDA,KANC;;AAOjB,QAAMC,eAAe,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAT,EAAiBC,KAAjB,CAAxB;AACA,QAAMI,WAAW,GAAGJ,KAAK,GAAGD,MAA5B;AACA,QAAMM,QAAQ,GAAGJ,eAAe,IAAI,GAApC;AACA,QAAMK,YAAY,GAAGC,sBAASC,EAAT,KAAgB,KAAhB,GAAwBJ,WAAW,GAAG,EAAH,GAAQ,EAA3C,GAAgD,EAArE;AACA,QAAMK,QAAQ,GAAGJ,QAAQ,GAAG,GAAH,GAAS,GAAlC;AAEA,WAAOH,IAAI,CAACC,GAAL,CAASF,eAAe,GAAGK,YAA3B,EAAyCG,QAAzC,CAAP;AACD,GAfyB;AAgB1BC,EAAAA,gBAAgB,EAAEnB,uBAhBQ;AAiB1BoB,EAAAA,cAAc,EAAE,MAjBU;AAkB1BC,EAAAA,mBAAmB,EAAE,SAlBK;AAmB1BC,EAAAA,qBAAqB,EAAE,OAnBG;AAoB1BC,EAAAA,mBAAmB,EAAE,IApBK;AAqB1BC,EAAAA,UAAU,EAAE,OArBc;AAsB1BC,EAAAA,aAAa,EAAE,KAtBW;AAuB1BC,EAAAA,kBAAkB,EAAE,OAvBM;AAwB1BC,EAAAA,YAAY,EAAE;AAxBY,CAA5B;;AA2BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,YAAD,EAA+B;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AACrD,MAAMC,YAAY,mCAAQ3B,mBAAR,EAAgC0B,MAAhC,CAAlB;AACA,MAAME,YAAY,GAAG,2BAAaH,YAAb,EAA2BE,YAA3B,CAArB;AACA,MAAME,SAAS,GAAG,2BAAgBC,mBAAhB,EAA4BF,YAA5B,EAA0CD,YAA1C,CAAlB;AACA,SAAOE,SAAP;AACD,CALD;;eAOeL,e","sourcesContent":["import React from 'react';\nimport { Dimensions, Platform, ScrollView } from 'react-native';\nimport { createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from '../routers/DrawerRouter';\nimport DrawerView from '../views/DrawerView';\nimport DrawerItems from '../views/DrawerNavigatorItems';\n\n// A stack navigators props are the intersection between\n// the base navigator props (navgiation, screenProps, etc)\n// and the view's props\n\nconst defaultContentComponent = props => <ScrollView alwaysBounceVertical={false}>\n    <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n      <DrawerItems {...props} />\n    </SafeAreaView>\n  </ScrollView>;\n\nconst DefaultDrawerConfig = {\n  drawerWidth: () => {\n    /*\n     * Default drawer width is screen width - header height\n     * with a max width of 280 on mobile and 320 on tablet\n     * https://material.io/guidelines/patterns/navigation-drawer.html\n     */\n    const { height, width } = Dimensions.get('window');\n    const smallerAxisSize = Math.min(height, width);\n    const isLandscape = width > height;\n    const isTablet = smallerAxisSize >= 600;\n    const appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    const maxWidth = isTablet ? 320 : 280;\n\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: 'white',\n  useNativeAnimations: true,\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n  overlayColor: 'black'\n};\n\nconst DrawerNavigator = (routeConfigs, config = {}) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  const navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;"]},"metadata":{},"sourceType":"script"}